
--init='
# calls-totaled-2.rc
# sub total, by depth ($dep)
# subtotals for possible future use
my @subtotals=(0,0,0,0,0,0,0);
my $total = 0;
my $DEBUG=0;
my $prevDep=9999;

# 
sub getTotal($) {
	# $t is some time value - elapse, cpu,...
	my ($t) = @_;
	# r will be non-zero when reaching depmin+1 following depmin
	my $r = 0;

	if ($DEBUG) {
		print "==============================\n";
		print "text: $text\n";
		print "     dep: $dep\n";
		print " prevDep: $prevDep\n";
		print "       t: " . sprintf("%6.6f",$t) . "\n";
		print "------------------------------\n";
	}

	# transaction completed when switching from $depmin to $depmin+1
	if ( $dep > $depmin  and $prevDep == $depMin ) {
		$r = $total;
		$total = $t; # first value of next group to total

   	print "SWITCHED DEP - dep: $dep prevDep; $prevDep\n" if $DEBUG;
      print "    total: $total\n" if $DEBUG;

	} else {
		$total += $t;
	}

	$prevDep = $dep;

	if ($DEBUG) {
		print "    total: " . sprintf("%6.6f",$total) . "\n";
	}

	return $r;
}

sub getString($) {
	my ($str) = @_;
	printf (qq{getString-\$str: %6.6f\n},$str) if $DEBUG;

	if ( $str) {
		print "   returning value\n" if $DEBUG;
		return sprintf(q{%6.6f},$str); 
	} else { 
		print "   returning empty string\n" if $DEBUG;
		return ""; 
	}
}
'

# first option uses $e for time
# second option uses $af for time
#--group='sprintf("%17.6f %10d %10d %10d  %-40.40s %-.60s %6.6f %13s", $tim, $line, $parse_id, $exec_id, "路 "x$dep.$name.(scalar(@bind)?"(".join(",",@bind).")":""), "路 "x$dep.substr($sql . " "x60,0,60),$e, getString( getTotal($e) ))'
--group='sprintf("%-28s %10d %10d %10d  %-40.40s %13s %-.60s %6.6f %13s", $time1, $line, $parse_id, $exec_id, "路 "x$dep.$name.(scalar(@bind)?"(".join(",",@bind).")":""),length($sqlid)==13 ? $sqlid : q{} , "路 "x$dep.substr((length($sqlid)==13 ? $sql : q{})  . " "x60,0,60),$af, getString( getTotal($af) ))'
#               12345678901234567 1234567890 1234567890 1234567890 1234567890123456789012345678901234567890 123..                                            00000.00000
#--group-label='"          END-TIM       LINE   PARSE-ID    EXEC-ID  CALL-NAME(BOUND-VALUES)                  STATEMENT-TEXT                                                Elapsed         Total"'
# for use with second group option
--group-label='"                   END-TIM         LINE   PARSE-ID    EXEC-ID  CALL-NAME(BOUND-VALUES)                  SQLID         STATEMENT-TEXT                                                Elapsed         Total"'

# first option gets dbcalls only
# second option gets all events
#--alldepths --nohistogram --sort=1na --name=:dbcall --top=0
# use the following to get all events
--alldepths --nohistogram --sort=1na --top=0


